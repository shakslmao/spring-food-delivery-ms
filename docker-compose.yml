services:
    postgres:
        container_name: delivery-ms-postgres
        image: postgres
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            PGDATA: /var/lib/postgresql/data/pgdata
        volumes:
            - postgres:/var/lib/postgresql/data
        ports:
            - 5432:5432
        networks:
            - delivery-microservices-network
        restart: unless-stopped

    pgadmin:
        container_name: delivery-ms-pgadmin
        image: dpage/pgadmin4
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
            PGADMIN_CONFIG_SERVER_MODE: "False"
        volumes:
            - pgadmin:/var/lib/pgadmin
        ports:
            - 5050:80
        networks:
            - delivery-microservices-network
        restart: unless-stopped

    zookeeper:
        image: confluentinc/cp-zookeeper:latest
        container_name: delivery-ms-zookeeper
        environment:
            ZOOKEEPER_SERVER_ID: 1
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
        ports:
            - 22181:2181
        networks:
            - delivery-microservices-network

    kafka:
        image: confluentinc/cp-kafka:latest
        container_name: delivery-ms-kafka
        ports:
            - "9092:9092"
        depends_on:
            - zookeeper
        environment:
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
            KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
        networks:
            - delivery-microservices-network

    mail-dev:
        container_name: delivery-ms-mail-dev
        image: maildev/maildev
        ports:
            - 1080:1080
            - 1025:1025

    zipkin:
        container_name: delivery-ms-zipkin
        image: openzipkin/zipkin
        ports:
            - 9411:9411
        networks:
            - delivery-microservices-network

    keycloak:
        container_name: delivery-ms-keycloak
        image: quay.io/keycloak/keycloak:24.0.2
        ports:
            - 9098:8080
        environment:
            KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
            KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
        networks:
            - delivery-microservices-network
        command:
            - "start-dev"

    customer-service:
        build:
            context: ./services/customer-server
        image: delivery-ms-customer-service
        ports:
            - 8090:8090
        environment:
            SPRING_PROFILES_ACTIVE: development
            SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/customerdb
            SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
            SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
            SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS: kafka:9092
        networks:
            - delivery-microservices-network
        depends_on:
            - postgres
            - kafka

networks:
    delivery-microservices-network:
        driver: bridge

volumes:
    postgres:
    pgadmin:
